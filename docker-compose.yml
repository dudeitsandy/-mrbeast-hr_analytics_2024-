version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: mrbeast_hr
      POSTGRES_USER: hr_user
      POSTGRES_PASSWORD: hr_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hr_user -d mrbeast_hr"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FastAPI Backend
  api:
    build: .
    command: python api/main.py
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://hr_user:hr_password@postgres:5432/mrbeast_hr
      - API_PORT=8000
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    restart: unless-stopped

  # Streamlit Dashboard
  dashboard:
    build: .
    command: streamlit run visualizations/dashboard.py --server.port 8501 --server.address 0.0.0.0
    ports:
      - "8501:8501"
    environment:
      - DATABASE_URL=postgresql://hr_user:hr_password@postgres:5432/mrbeast_hr
      - DASHBOARD_PORT=8501
    depends_on:
      api:
        condition: service_started
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    restart: unless-stopped

  # Data Pipeline (runs once on startup)
  pipeline:
    build: .
    command: python scripts/hr_data_pipeline.py
    environment:
      - DATABASE_URL=postgresql://hr_user:hr_password@postgres:5432/mrbeast_hr
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs

volumes:
  postgres_data:
